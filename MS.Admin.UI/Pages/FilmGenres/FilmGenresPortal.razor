@inject IAdminService AdminService

@if (!string.IsNullOrEmpty(Alert))
{
	<div class="alert alert-danger alert-dismissible fade show w-25" role="alert">
		<strong>couldn't create/delete similarity.</strong>
		<button type="button" class="btn-close" data-bs-dismiss="alert" @onclick="CloseAlert" aria-label="Close"></button>
	</div>
}

@if (Navigation.Equals(RTPageType.Create))
{
	<ChangeFilmGenre RTPage="@Navigation" OnChange="OnChange"></ChangeFilmGenre>
}
else if (Navigation.Equals(RTPageType.Delete))
{
	<ChangeFilmGenre RTPage="@Navigation" Model="@FilmGenre" OnChange="OnChange"></ChangeFilmGenre>
}

<div class="d-flex me-1">
	<a class="btn btn-outline-secondary me-1" href="/" role="button">Home</a>
	<button type="button" class="btn btn-outline-primary me-1" @onclick="()=>ChangeRTPageType(RTPageType.Index)">Index</button>
	<button type="button" class="btn btn-outline-success" @onclick="()=>ChangeRTPageType(RTPageType.Create)">Create</button>
</div>

<FilmGenresIndex OnClick="OnClick" Model="Model"></FilmGenresIndex>

@code {
	public string Alert { get; set; } = string.Empty;
	public string Navigation { get; set; } = RTPageType.Index;
	public List<ViewFilmGenresDTO> Model { get; set; } = new();


	public ViewFilmGenresDTO FilmGenre { get; set; } = new();

	protected override async Task OnInitializedAsync()
	{
		Alert = string.Empty;
		Model = await AdminService.GetAsync<ViewFilmGenresDTO>($"filmgenres");
	}

	void ChangeRTPageType(string rtPageType)
	{
		Navigation = rtPageType;
	}

	void CloseAlert()
	{
		Alert = string.Empty;
	}

	async Task OnClick(RTClickModel model)
	{
		if (model.RTPageType.Equals(RTPageType.Delete))
		{
			//First call the Similarfilms as we don't have SingleAsync
			foreach (var similarity in Model)
			{
				if (similarity.FilmId.Equals(model.FilmId) && similarity.GenreId.Equals(model.SecondId))
				{
					FilmGenre = similarity;
				}
			}
		}

		ChangeRTPageType(model.RTPageType);

	}

	//Referenced and invoked from ChangeS.F. Component
	async Task OnChange(string alert)
	{
		try
		{
			Alert = alert;
			Model = await AdminService.GetAsync<ViewFilmGenresDTO>($"filmgenres");
			ChangeRTPageType(RTPageType.Index);
		}
		catch
		{

		}
	}
}