@*@inject IAdminService AdminService

@if (!string.IsNullOrEmpty(Alert))
{
	<div class="alert alert-danger alert-dismissible fade show w-25" role="alert">
		<strong>couldn't create film.</strong>
		<button type="button" class="btn-close" data-bs-dismiss="alert" @onclick="CloseAlert" aria-label="Close"></button>
	</div>
}

@if (Navigation.Equals(RTPageType.Create))
{
	<ChangeFilmGenre RTPage="@Navigation" OnChange="OnChange"></ChangeFilmGenre>
}
else if (Navigation.Equals(PageType.Edit) || (Navigation.Equals(PageType.Delete)))
{
	<ChangeFilmGenre Page="@Navigation" Model="@Filmgenre" OnChange="OnChange"></ChangeFilmGenre>
}

<div class="d-flex me-1">
	<a class="btn btn-outline-secondary me-1" href="/" role="button">Home</a>
	<button type="button" class="btn btn-outline-primary me-1" @onclick="()=>ChangeRTPageType(RTPageType.Index)">Index</button>
	<button type="button" class="btn btn-outline-success" @onclick="()=>ChangeRTPageType(RTPageType.Create)">Create</button>
</div>

<FilmGenresIndex OnClick="OnClick" Model="Model"></FilmGenresIndex>

@code {
	public string Alert { get; set; } = string.Empty;
	public string Navigation { get; set; } = RTPageType.Index;
	[Parameter] public List<ViewFilmGenresDTO> Model { get; set; } = new();
	public ViewFilmGenresDTO Filmgenre { get; set; } = new();

	protected override async Task OnInitializedAsync()
	{
		Alert = string.Empty;
		Model = await AdminService.GetAsync<ViewFilmGenresDTO>($"filmgenres");
	}

	void ChangeRTPageType(string rtPageType)
	{
		Navigation = rtPageType;
	}

	void CloseAlert()
	{
		Alert = string.Empty;
	}

	async Task OnClick(RTClickModel model)
	{
		/**holding the selected film-genre connection to delete**/
		var Filmgenres = await AdminService.GetAsync<ViewFilmGenresDTO>($"filmgenres");
		Filmgenres = Filmgenres.Where(c => c.FilmId.Equals(model.FilmId) && c.GenreId.Equals(model.SecondId)).ToList();
		Filmgenre = Filmgenres.FirstOrDefault();
		ChangeRTPageType(model.RTPageType);
	}

	async Task OnChange(string alert)
	{
		try
		{
			Alert = alert;
			Model = await AdminService.GetAsync<ViewFilmGenresDTO>($"filmgenres");
			ChangeRTPageType(RTPageType.Index);
		}
		catch
		{
			Alert = $"Couldn't create/delete the film-genre connection";
		}
	}
}*@
